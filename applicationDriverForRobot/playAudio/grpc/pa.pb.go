// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pa.proto

package playAudio

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the tag for the server to log, not to query.
type PlayAudioRequest struct {
	AudioName            string   `protobuf:"bytes,1,opt,name=audioName,proto3" json:"audioName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayAudioRequest) Reset()         { *m = PlayAudioRequest{} }
func (m *PlayAudioRequest) String() string { return proto.CompactTextString(m) }
func (*PlayAudioRequest) ProtoMessage()    {}
func (*PlayAudioRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0edce6c8ca0ee4bf, []int{0}
}

func (m *PlayAudioRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayAudioRequest.Unmarshal(m, b)
}
func (m *PlayAudioRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayAudioRequest.Marshal(b, m, deterministic)
}
func (m *PlayAudioRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayAudioRequest.Merge(m, src)
}
func (m *PlayAudioRequest) XXX_Size() int {
	return xxx_messageInfo_PlayAudioRequest.Size(m)
}
func (m *PlayAudioRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayAudioRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayAudioRequest proto.InternalMessageInfo

func (m *PlayAudioRequest) GetAudioName() string {
	if m != nil {
		return m.AudioName
	}
	return ""
}

// The response message containing the last RobotStatus, datetime, and errorMesage if any.
type PlayAudioReply struct {
	ErrorMessage         string   `protobuf:"bytes,1,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayAudioReply) Reset()         { *m = PlayAudioReply{} }
func (m *PlayAudioReply) String() string { return proto.CompactTextString(m) }
func (*PlayAudioReply) ProtoMessage()    {}
func (*PlayAudioReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0edce6c8ca0ee4bf, []int{1}
}

func (m *PlayAudioReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayAudioReply.Unmarshal(m, b)
}
func (m *PlayAudioReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayAudioReply.Marshal(b, m, deterministic)
}
func (m *PlayAudioReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayAudioReply.Merge(m, src)
}
func (m *PlayAudioReply) XXX_Size() int {
	return xxx_messageInfo_PlayAudioReply.Size(m)
}
func (m *PlayAudioReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayAudioReply.DiscardUnknown(m)
}

var xxx_messageInfo_PlayAudioReply proto.InternalMessageInfo

func (m *PlayAudioReply) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*PlayAudioRequest)(nil), "playAudio.PlayAudioRequest")
	proto.RegisterType((*PlayAudioReply)(nil), "playAudio.PlayAudioReply")
}

func init() { proto.RegisterFile("pa.proto", fileDescriptor_0edce6c8ca0ee4bf) }

var fileDescriptor_0edce6c8ca0ee4bf = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0x48, 0xd4, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2c, 0xc8, 0x49, 0xac, 0x74, 0x2c, 0x4d, 0xc9, 0xcc, 0x57,
	0x32, 0xe0, 0x12, 0x08, 0x80, 0x71, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x64, 0xb8,
	0x38, 0x13, 0x41, 0x7c, 0xbf, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x84,
	0x80, 0x92, 0x09, 0x17, 0x1f, 0x92, 0x8e, 0x82, 0x9c, 0x4a, 0x21, 0x25, 0x2e, 0x9e, 0xd4, 0xa2,
	0xa2, 0xfc, 0x22, 0xdf, 0xd4, 0xe2, 0xe2, 0xc4, 0x74, 0x98, 0x16, 0x14, 0x31, 0xa3, 0x04, 0x24,
	0x7b, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0x7c, 0xb8, 0x04, 0x9c, 0xf3, 0xf3, 0x4a,
	0x8a, 0xf2, 0x73, 0x42, 0x32, 0x52, 0x7d, 0x32, 0xd3, 0x4a, 0x52, 0x8b, 0x84, 0xa4, 0xf5, 0xe0,
	0x6e, 0xd3, 0x43, 0x77, 0x98, 0x94, 0x24, 0x76, 0xc9, 0x82, 0x9c, 0x4a, 0x25, 0x86, 0x24, 0x36,
	0xb0, 0xdf, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x54, 0x18, 0x33, 0xe7, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PlayAudioServiceClient is the client API for PlayAudioService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayAudioServiceClient interface {
	// Sends a greeting
	ControlTheLifter(ctx context.Context, in *PlayAudioRequest, opts ...grpc.CallOption) (*PlayAudioReply, error)
}

type playAudioServiceClient struct {
	cc *grpc.ClientConn
}

func NewPlayAudioServiceClient(cc *grpc.ClientConn) PlayAudioServiceClient {
	return &playAudioServiceClient{cc}
}

func (c *playAudioServiceClient) ControlTheLifter(ctx context.Context, in *PlayAudioRequest, opts ...grpc.CallOption) (*PlayAudioReply, error) {
	out := new(PlayAudioReply)
	err := c.cc.Invoke(ctx, "/playAudio.PlayAudioService/ControlTheLifter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayAudioServiceServer is the server API for PlayAudioService service.
type PlayAudioServiceServer interface {
	// Sends a greeting
	ControlTheLifter(context.Context, *PlayAudioRequest) (*PlayAudioReply, error)
}

// UnimplementedPlayAudioServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPlayAudioServiceServer struct {
}

func (*UnimplementedPlayAudioServiceServer) ControlTheLifter(ctx context.Context, req *PlayAudioRequest) (*PlayAudioReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ControlTheLifter not implemented")
}

func RegisterPlayAudioServiceServer(s *grpc.Server, srv PlayAudioServiceServer) {
	s.RegisterService(&_PlayAudioService_serviceDesc, srv)
}

func _PlayAudioService_ControlTheLifter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayAudioRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayAudioServiceServer).ControlTheLifter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/playAudio.PlayAudioService/ControlTheLifter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayAudioServiceServer).ControlTheLifter(ctx, req.(*PlayAudioRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlayAudioService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "playAudio.PlayAudioService",
	HandlerType: (*PlayAudioServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ControlTheLifter",
			Handler:    _PlayAudioService_ControlTheLifter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pa.proto",
}
