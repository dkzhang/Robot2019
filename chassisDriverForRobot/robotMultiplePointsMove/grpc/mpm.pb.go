// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpm.proto

package robotMultiplePointsMove

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MultiplePointsInfo struct {
	//Mask value to indicate optional value
	// count   |   distance_tolerance    |    max_continuous_retries |
	//   4     |           2             |           1               |
	InfoMask uint32 `protobuf:"varint,1,opt,name=infoMask,proto3" json:"infoMask,omitempty"`
	//required
	Markers []string `protobuf:"bytes,2,rep,name=markers,proto3" json:"markers,omitempty"`
	//optional
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	DistanceTolerance    float32  `protobuf:"fixed32,4,opt,name=distance_tolerance,json=distanceTolerance,proto3" json:"distance_tolerance,omitempty"`
	MaxContinuousRetries int32    `protobuf:"varint,5,opt,name=max_continuous_retries,json=maxContinuousRetries,proto3" json:"max_continuous_retries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiplePointsInfo) Reset()         { *m = MultiplePointsInfo{} }
func (m *MultiplePointsInfo) String() string { return proto.CompactTextString(m) }
func (*MultiplePointsInfo) ProtoMessage()    {}
func (*MultiplePointsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4f32af36235b6a, []int{0}
}

func (m *MultiplePointsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiplePointsInfo.Unmarshal(m, b)
}
func (m *MultiplePointsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiplePointsInfo.Marshal(b, m, deterministic)
}
func (m *MultiplePointsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiplePointsInfo.Merge(m, src)
}
func (m *MultiplePointsInfo) XXX_Size() int {
	return xxx_messageInfo_MultiplePointsInfo.Size(m)
}
func (m *MultiplePointsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiplePointsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MultiplePointsInfo proto.InternalMessageInfo

func (m *MultiplePointsInfo) GetInfoMask() uint32 {
	if m != nil {
		return m.InfoMask
	}
	return 0
}

func (m *MultiplePointsInfo) GetMarkers() []string {
	if m != nil {
		return m.Markers
	}
	return nil
}

func (m *MultiplePointsInfo) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *MultiplePointsInfo) GetDistanceTolerance() float32 {
	if m != nil {
		return m.DistanceTolerance
	}
	return 0
}

func (m *MultiplePointsInfo) GetMaxContinuousRetries() int32 {
	if m != nil {
		return m.MaxContinuousRetries
	}
	return 0
}

type MoveResponse struct {
	Command              string   `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	TaskId               string   `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveResponse) Reset()         { *m = MoveResponse{} }
func (m *MoveResponse) String() string { return proto.CompactTextString(m) }
func (*MoveResponse) ProtoMessage()    {}
func (*MoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4f32af36235b6a, []int{1}
}

func (m *MoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveResponse.Unmarshal(m, b)
}
func (m *MoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveResponse.Marshal(b, m, deterministic)
}
func (m *MoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveResponse.Merge(m, src)
}
func (m *MoveResponse) XXX_Size() int {
	return xxx_messageInfo_MoveResponse.Size(m)
}
func (m *MoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MoveResponse proto.InternalMessageInfo

func (m *MoveResponse) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *MoveResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MoveResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *MoveResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type MoveAndWaitForArrivalResponse struct {
	ErrorMessage         string   `protobuf:"bytes,1,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveAndWaitForArrivalResponse) Reset()         { *m = MoveAndWaitForArrivalResponse{} }
func (m *MoveAndWaitForArrivalResponse) String() string { return proto.CompactTextString(m) }
func (*MoveAndWaitForArrivalResponse) ProtoMessage()    {}
func (*MoveAndWaitForArrivalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4f32af36235b6a, []int{2}
}

func (m *MoveAndWaitForArrivalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveAndWaitForArrivalResponse.Unmarshal(m, b)
}
func (m *MoveAndWaitForArrivalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveAndWaitForArrivalResponse.Marshal(b, m, deterministic)
}
func (m *MoveAndWaitForArrivalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveAndWaitForArrivalResponse.Merge(m, src)
}
func (m *MoveAndWaitForArrivalResponse) XXX_Size() int {
	return xxx_messageInfo_MoveAndWaitForArrivalResponse.Size(m)
}
func (m *MoveAndWaitForArrivalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveAndWaitForArrivalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MoveAndWaitForArrivalResponse proto.InternalMessageInfo

func (m *MoveAndWaitForArrivalResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*MultiplePointsInfo)(nil), "robotMultiplePointsMove.MultiplePointsInfo")
	proto.RegisterType((*MoveResponse)(nil), "robotMultiplePointsMove.MoveResponse")
	proto.RegisterType((*MoveAndWaitForArrivalResponse)(nil), "robotMultiplePointsMove.MoveAndWaitForArrivalResponse")
}

func init() { proto.RegisterFile("mpm.proto", fileDescriptor_6b4f32af36235b6a) }

var fileDescriptor_6b4f32af36235b6a = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4d, 0x8b, 0xdb, 0x30,
	0x10, 0x8d, 0xf3, 0x59, 0x0f, 0xc9, 0xa1, 0x22, 0x4d, 0x4c, 0xa0, 0x60, 0x5c, 0x0a, 0x86, 0xd2,
	0x1c, 0xda, 0xd2, 0x7b, 0x08, 0x14, 0x72, 0x30, 0x14, 0xb1, 0xb0, 0x97, 0x05, 0xa3, 0xd8, 0xca,
	0x22, 0x62, 0x69, 0x8c, 0x24, 0x87, 0x9c, 0xf2, 0xef, 0xf6, 0x0f, 0xed, 0x2f, 0x58, 0xe4, 0xc4,
	0x61, 0x43, 0x36, 0x0b, 0x7b, 0x92, 0xde, 0x7b, 0x62, 0xe6, 0xcd, 0x3c, 0x81, 0x2f, 0x4b, 0x39,
	0x2f, 0x35, 0x5a, 0x24, 0x53, 0x8d, 0x6b, 0xb4, 0x49, 0x55, 0x58, 0x51, 0x16, 0xfc, 0x3f, 0x0a,
	0x65, 0x4d, 0x82, 0x3b, 0x1e, 0x3d, 0x79, 0x40, 0x2e, 0xe9, 0x95, 0xda, 0x20, 0x99, 0xc1, 0x27,
	0xa1, 0x36, 0x98, 0x30, 0xb3, 0x0d, 0xbc, 0xd0, 0x8b, 0x47, 0xf4, 0x8c, 0x49, 0x00, 0x03, 0xc9,
	0xf4, 0x96, 0x6b, 0x13, 0xb4, 0xc3, 0x4e, 0xec, 0xd3, 0x06, 0x92, 0x31, 0xf4, 0x32, 0xac, 0x94,
	0x0d, 0x3a, 0xa1, 0x17, 0xf7, 0xe8, 0x11, 0x90, 0x9f, 0x40, 0x72, 0x61, 0x2c, 0x53, 0x19, 0x4f,
	0x2d, 0x16, 0x5c, 0xbb, 0x5b, 0xd0, 0x0d, 0xbd, 0xb8, 0x4d, 0x3f, 0x37, 0xca, 0x5d, 0x23, 0x90,
	0x3f, 0x30, 0x91, 0x6c, 0x9f, 0x66, 0xa8, 0xac, 0x50, 0x15, 0x56, 0x26, 0xd5, 0xdc, 0x6a, 0xc1,
	0x4d, 0xd0, 0xab, 0xab, 0x8e, 0x25, 0xdb, 0x2f, 0xcf, 0x22, 0x3d, 0x6a, 0xd1, 0x01, 0x86, 0x6e,
	0x1e, 0xca, 0x4d, 0x89, 0xca, 0x70, 0x67, 0x32, 0x43, 0x29, 0x99, 0xca, 0x6b, 0xff, 0x3e, 0x6d,
	0x20, 0x99, 0x40, 0xdf, 0x58, 0x66, 0x2b, 0xe7, 0xde, 0x09, 0x27, 0x44, 0xbe, 0xc1, 0x88, 0x6b,
	0x8d, 0x3a, 0x95, 0xdc, 0x18, 0xf6, 0xc8, 0xeb, 0x21, 0x7c, 0x3a, 0xac, 0xc9, 0xe4, 0xc8, 0x91,
	0x29, 0x0c, 0x2c, 0x33, 0xdb, 0x54, 0xe4, 0xf5, 0x00, 0x3e, 0xed, 0x3b, 0xb8, 0xca, 0xa3, 0x25,
	0x7c, 0x75, 0xfd, 0x17, 0x2a, 0xbf, 0x67, 0xc2, 0xfe, 0x43, 0xbd, 0xd0, 0x5a, 0xec, 0x58, 0x71,
	0x36, 0x14, 0xc1, 0x45, 0xa5, 0x93, 0xab, 0x0b, 0xee, 0xd7, 0xf3, 0x55, 0x18, 0xae, 0x26, 0x79,
	0x80, 0x6e, 0x7d, 0xfe, 0x98, 0xdf, 0x48, 0x71, 0x7e, 0x9d, 0xe0, 0xec, 0xfb, 0xed, 0xc7, 0xaf,
	0xf6, 0x14, 0xb5, 0xc8, 0x01, 0xbe, 0xbc, 0xe9, 0xfc, 0x63, 0xed, 0xfe, 0xbe, 0xdb, 0xee, 0xe6,
	0x5a, 0xa2, 0xd6, 0xba, 0x5f, 0xff, 0xd0, 0xdf, 0x2f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x80, 0x3e,
	0xf7, 0x74, 0xae, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MultiplePointsMoveClient is the client API for MultiplePointsMove service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MultiplePointsMoveClient interface {
	Move(ctx context.Context, in *MultiplePointsInfo, opts ...grpc.CallOption) (*MoveResponse, error)
	MoveAndWaitForArrival(ctx context.Context, in *MultiplePointsInfo, opts ...grpc.CallOption) (*MoveAndWaitForArrivalResponse, error)
}

type multiplePointsMoveClient struct {
	cc *grpc.ClientConn
}

func NewMultiplePointsMoveClient(cc *grpc.ClientConn) MultiplePointsMoveClient {
	return &multiplePointsMoveClient{cc}
}

func (c *multiplePointsMoveClient) Move(ctx context.Context, in *MultiplePointsInfo, opts ...grpc.CallOption) (*MoveResponse, error) {
	out := new(MoveResponse)
	err := c.cc.Invoke(ctx, "/robotMultiplePointsMove.MultiplePointsMove/Move", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *multiplePointsMoveClient) MoveAndWaitForArrival(ctx context.Context, in *MultiplePointsInfo, opts ...grpc.CallOption) (*MoveAndWaitForArrivalResponse, error) {
	out := new(MoveAndWaitForArrivalResponse)
	err := c.cc.Invoke(ctx, "/robotMultiplePointsMove.MultiplePointsMove/MoveAndWaitForArrival", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MultiplePointsMoveServer is the server API for MultiplePointsMove service.
type MultiplePointsMoveServer interface {
	Move(context.Context, *MultiplePointsInfo) (*MoveResponse, error)
	MoveAndWaitForArrival(context.Context, *MultiplePointsInfo) (*MoveAndWaitForArrivalResponse, error)
}

// UnimplementedMultiplePointsMoveServer can be embedded to have forward compatible implementations.
type UnimplementedMultiplePointsMoveServer struct {
}

func (*UnimplementedMultiplePointsMoveServer) Move(ctx context.Context, req *MultiplePointsInfo) (*MoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Move not implemented")
}
func (*UnimplementedMultiplePointsMoveServer) MoveAndWaitForArrival(ctx context.Context, req *MultiplePointsInfo) (*MoveAndWaitForArrivalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveAndWaitForArrival not implemented")
}

func RegisterMultiplePointsMoveServer(s *grpc.Server, srv MultiplePointsMoveServer) {
	s.RegisterService(&_MultiplePointsMove_serviceDesc, srv)
}

func _MultiplePointsMove_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiplePointsInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MultiplePointsMoveServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/robotMultiplePointsMove.MultiplePointsMove/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MultiplePointsMoveServer).Move(ctx, req.(*MultiplePointsInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _MultiplePointsMove_MoveAndWaitForArrival_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiplePointsInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MultiplePointsMoveServer).MoveAndWaitForArrival(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/robotMultiplePointsMove.MultiplePointsMove/MoveAndWaitForArrival",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MultiplePointsMoveServer).MoveAndWaitForArrival(ctx, req.(*MultiplePointsInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _MultiplePointsMove_serviceDesc = grpc.ServiceDesc{
	ServiceName: "robotMultiplePointsMove.MultiplePointsMove",
	HandlerType: (*MultiplePointsMoveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Move",
			Handler:    _MultiplePointsMove_Move_Handler,
		},
		{
			MethodName: "MoveAndWaitForArrival",
			Handler:    _MultiplePointsMove_MoveAndWaitForArrival_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mpm.proto",
}
